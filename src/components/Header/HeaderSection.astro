---
import { gsap } from "gsap";
import SplitType from "split-type";
---

<section id="header" class="header z-40">
  <div class="header_wall z-50 fixed w-screen h-screen bg-neutral-50"></div>
  <div
    class="mix-blend-difference text-neutral-50 header_logo z-50 absolute font-josefin leading-[100%] font-bold text-4xl
        px-3 md:px-12 py-5 flex flex-col justify-center items-start w-full h-screen"
  >
    <div class="fixed header_titles flex flex-col overflow-hidden w-[200px]">
      <h2 class="header_title flex">PAVLO</h2>
      <h2 class="header_title">TISHYNIN</h2>
    </div>
  </div>
</section>

<script>
  import { gsap } from "gsap";
  import SplitType from "split-type";

  document.addEventListener("DOMContentLoaded", () => {
    const headerSection = document.querySelector("#header");

    // Используем SplitType для каждого заголовка
    const headerText1 = new SplitType(".header_title:nth-of-type(1)"); // Для PAVLO
    const headerText2 = new SplitType(".header_title:nth-of-type(2)"); // Для TISHYNIN

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const tl = gsap.timeline();

            // Анимация для первого заголовка
            tl.from(headerText1.chars, {
              y: 300,
              duration: 1,
              stagger: 0.08,
              delay: 0.5,
            });

            // Анимация для второго заголовка
            tl.from(
              headerText2.chars,
              {
                y: 300,
                duration: 1,
                stagger: 0.08,
                delay: 0.5,
              },
              "-=1.3"
            );

            tl.to(".header_logo", {
              delay: 0.1,
              fontSize: "18px", // Изменение размера текста
              duration: 2,
              height: "80px",
              ease: "power2.inOut",
            });

            tl.to(".header_wall", {
              height: "0px",
              duration: 0.8,
            });

            // Отключаем наблюдатель после срабатывания анимации
            observer.unobserve(headerSection);
          }
        });
      },
      {
        threshold: 0.1, // Процент видимости элемента для срабатывания
      }
    );

    observer.observe(headerSection);
  });
</script>

<style>
  .header_title {
    display: flex; /* Обеспечивает горизонтальное размещение текста */
    overflow: hidden; /* Обрезает лишний текст при анимации */
  }

  .header_title h2 {
    display: inline-block; /* Позволяет применять стили к заголовкам отдельно */
    margin: 0; /* Убираем отступы, чтобы избежать лишних пробелов */
  }
</style>
