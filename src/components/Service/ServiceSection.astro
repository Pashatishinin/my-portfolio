---
import gsap from "gsap";
import ScrollTrigger from "gsap/ScrollTrigger";

import { getService } from "../../../lib/api";
const service = await getService()
---

<section id="service" class="bg-neutral-900 overflow-hidden h-full pb-10">
  <div class="mt-24 mb-10 lg:mb-40 p-5 h-24 overflow-hidden
  sm:p-10">
    <h2
      class="mt-40 service_title text-3xl font-black font-josefin text-transparent bg-clip-text bg-gradient-to-t from-rose-800 via-rose-500 to-yellow-400 uppercase
      sm:text-5xl
      md:text-6xl"
    >
      What can i do
    </h2>
  </div>

  <div
    class="service-container gap-5 font-bold text-2xl
  sm:gap-12 sm:text-6xl
  md:gap-16 md:text-7xl
  lg:gap-20 lg:text-8xl
  text-neutral-50"
  >





  {service.map(item => ( 
    <h3 class="service-text font-bold uppercase">
      <p class="pl-5
      sm:pl-10">{item.title}</p>
      <span class="bg-gradient-to-t from-rose-800 via-rose-500 to-yellow-400"
        ><p class="pl-5
      sm:pl-10">{item.title}</p></span>
    </h3>
  ))}
   
  </div>
</section>

<style>
  .service-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
  }

  .service-text {
    padding: 20px 0;
    line-height: 100%;
    letter-spacing: -0.1rem;
    margin: 0;
    width: 100%;
   
    background-size: 100%;
    transition: background-size 0.5s cubic-bezier(0.4, 0, 0.2, 1); 
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: center;
    position: relative;
  }

  .service-container span {
    position: absolute;
    width: 100%;
    height: 100%;
    color: black;
    clip-path: polygon(0 50%, 100% 50%, 100% 50%, 0 50%);
    transform-origin: center;
    transition: all 0.5s cubic-bezier(0.1, 0.5, 0.5, 1);
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  /* .service-text:hover span {
       clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
    } */
</style>

<script>
  import gsap from "gsap";
  import ScrollTrigger from "gsap/ScrollTrigger";

  document.addEventListener("DOMContentLoaded", () => {
    gsap.registerPlugin(ScrollTrigger);

    const serviceSection = document.querySelector("#service");

    const observer = new IntersectionObserver(
      (entries, observer) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            // Запуск анимации, когда секция появляется в зоне видимости

            const tl2 = gsap.timeline();

            tl2.to(".service_title", {
              y: "-10rem",
              duration: 1,
              stagger: 0.2,
              delay: 1,
            });

            // Отключаем наблюдатель после срабатывания анимации
            observer.unobserve(serviceSection);
          }
        });
      },
      {
        threshold: 0.1, // Процент видимости элемента для срабатывания
      }
    );

    observer.observe(serviceSection);

    const textElements =
      gsap.utils.toArray<HTMLHeadingElement>(".service-text");

    // Анимация для каждого элемента
    textElements.forEach((text) => {
      const span = text.querySelector("span") as HTMLSpanElement;

      if (span) {
        // Используем fromTo для анимации
        gsap.fromTo(
          span,
          {
            clipPath: "polygon(0 0, 100% 0, 100% 0, 0 0)", // Начальное значение clip-path
            backgroundSize: "0%", // Начальное значение backgroundSize
          },
          {
            clipPath: "polygon(0 0, 100% 0, 100% 100%, 0 100%)", // Конечное значение clip-path
            backgroundSize: "100%", // Конечное значение backgroundSize
            ease: "none",
            scrollTrigger: {
              trigger: text,
              start: "center 50%", // Начало анимации
              end: "center 40%", // Конец анимации
              scrub: 0.5,
              // markers: true,
              onLeave: () => {
                gsap.to(span, {
                  clipPath: "polygon(0 0, 100% 0, 100% 0, 0 0)", // Возврат к начальному состоянию
                  backgroundSize: "0%", // Сброс background-size
                  duration: 0.5,
                });
              },
              onEnterBack: () => {
                gsap.to(span, {
                  clipPath: "polygon(0 0, 100% 0, 100% 100%, 0 100%)", // Возврат к конечному состоянию
                  backgroundSize: "100%", // Сброс background-size
                  duration: 0.5,
                });
              },
            },
          }
        );
      }
    });
  });
</script>
